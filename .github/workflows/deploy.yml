name: Deploy to Docker Swarm

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_HUB_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_HUB_REPOSITORY: ${{ vars.DOCKER_HUB_USER }}/${{ vars.DOCKER_HUB_APPNAME }}
      BRANCH: ${{ github.ref_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        
        run: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"

      - name: Build & Push Docker Image
        run: |
          docker build -t $DOCKER_HUB_REPOSITORY:$BRANCH .
          docker push $DOCKER_HUB_REPOSITORY:$BRANCH
          if [ "$BRANCH" == "main" ]; then
            docker tag $DOCKER_HUB_REPOSITORY:$BRANCH $DOCKER_HUB_REPOSITORY:latest
            docker push $DOCKER_HUB_REPOSITORY:latest
          fi

  deploy:
    needs: build  # Deploy only after successful build
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_HUB_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_HUB_REPOSITORY: ${{ vars.DOCKER_HUB_USER }}/${{ vars.DOCKER_HUB_APPNAME }}
      DOCKER_HUB_APPNAME: ${{ vars.DOCKER_HUB_APPNAME }}
      DOCKER_TAG: ${{ github.ref_name }}
    steps:
      # - name: Copy compose file to server
      #   run: |
      #     export BRANCH=${{ github.ref_name }}
      #     export SERVER_HOST=${{ vars.DEPLOY_HOST }}
      #     export SERVER_PORT=${{ vars.DEPLOY_PORT }}
      #     export SERVER_USER=${{ vars.DEPLOY_USER }}
      #     if [ "$BRANCH" = "main" ]; then
      #       export COMPOSE_FILE=docker-compose.production.yml
      #     elif [ "$BRANCH" = "develop" ]; then
      #       export COMPOSE_FILE=docker-compose.staging.yml
      #     else
      #       export COMPOSE_FILE=docker-compose.yml
      #     fi
      #     scp -P $SERVER_PORT $COMPOSE_FILE $SERVER_USER@$SERVER_HOST:~/
      - name: Check current active directory
        run: pwd
      - name: SSH into Server & Deploy to Docker Swarm
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DEPLOY_HOST }}
          port: ${{ vars.DEPLOY_PORT }}  # Use custom SSH port
          username: ${{ vars.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export DOCKER_REPOSITORY=${{ vars.DOCKER_HUB_USER }}/${{ vars.DOCKER_HUB_APPNAME }}
            export BUILD_TAG=${{ github.ref_name }}
            export BRANCH=$BUILD_TAG
            if [ "$BRANCH" = "main" ]; then
              export STACK_NAME=${{ vars.DOCKER_HUB_APPNAME }}-production
              export COMPOSE_FILE=docker-compose.production.yml
            elif [ "$BRANCH" = "develop" ]; then
              export STACK_NAME=${{ vars.DOCKER_HUB_APPNAME }}-staging
              export COMPOSE_FILE=docker-compose.staging.yml
            else
              export STACK_NAME=${{ vars.DOCKER_HUB_APPNAME }}-stack
              export COMPOSE_FILE=docker-compose.yml
            fi
            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
            docker pull $DOCKER_REPOSITORY:$BUILD_TAG
            docker stack deploy -c $COMPOSE_FILE $STACK_NAME
